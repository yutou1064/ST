<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.demo</groupId>
	<artifactId>ST</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>ST</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Swagger -->
		<dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>
		<dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<finalName>ST</finalName>
		<plugins>
			
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<skipAfterFailureCount>5</skipAfterFailureCount>
				</configuration>
				<version>2.19</version>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<configLocation>${project.basedir}/checkstyle/sun_checks.xml</configLocation>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>vaildate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					<configuration>
						<failOnViolation>true</failOnViolation>
					</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.5</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <!-- Optional directory to put findbugs xdoc xml report -->
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                    <!--跳过执行的规则-->
                    <!--<omitVisitors>UnreadFields</omitVisitors>-->
                    <!--选择执行的规则-->
                    <!--<visitors>FindDeadLocalStores,UnreadFields</visitors>-->
                    <excludeFilterFile>findbugs/findbugs-exclude.xml</excludeFilterFile>
                    <effort>Min</effort>
                    <threshold>High</threshold>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>
 			
 			<plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-pmd-plugin</artifactId>
		        <version>3.8</version>
		        <configuration>
		            <!--开启增量分析 -->
		            <!--加快PMD的执行速度，同时保持分析的质量。-->
		            <analysisCache>true</analysisCache>
		            <sourceEncoding>utf-8</sourceEncoding>
		            <minimumTokens>100</minimumTokens>
		            <!--false禁用此选项以使用0退出并只编写报告-->
		            <failOnViolation>false
		            </failOnViolation>
		            <printFailingErrors>true</printFailingErrors>
		            <rulesets>
                        <ruleset>rulesets/java/ali-comment.xml</ruleset>
                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                        <ruleset>rulesets/java/ali-constant.xml</ruleset>
                        <ruleset>rulesets/java/ali-exception.xml</ruleset>
                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                        <ruleset>rulesets/java/ali-naming.xml</ruleset>
                        <ruleset>rulesets/java/ali-oop.xml</ruleset>
                        <ruleset>rulesets/java/ali-orm.xml</ruleset>
                        <ruleset>rulesets/java/ali-other.xml</ruleset>
                        <ruleset>rulesets/java/ali-set.xml</ruleset>
                    </rulesets>
		        </configuration>
		        <executions>
		            <execution>
		                <id>verify</id>
		                <!--verify阶段可以使用cpm的功能-->
		                <phase>verify</phase>
		                <goals>
		                    <goal>check</goal>
		                </goals>
		            </execution>
		        </executions>
		         <dependencies>
                    <dependency>
                        <groupId>com.alibaba.p3c</groupId>
                        <artifactId>p3c-pmd</artifactId>
                        <version>1.3.6</version>
                    </dependency>
                </dependencies>
		    </plugin>
		    <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>
			

			<!--swagger codegen maven plugin -->
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.4.8</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/temp/ST.yaml</inputSpec>
							<!--generate services language -->

							<!-- <language>spring</language> -->
							<!-- <library>spring-boot</library> -->

							<!--generate clients language -->
							<language>java</language>
							<library>resttemplate</library>
							<output>${project.basedir}/target/st-client</output>

							<apiPackage>com.demo.client.api</apiPackage>
							<modelPackage>com.demo.client.model</modelPackage>
							<invokerPackage>com.demo.client.invoker</invokerPackage>

							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<java8>true</java8>
								<groupId>com.demo.client</groupId>
								<artifactId>ST-client</artifactId>
								<artifactVersion>0.0.1-SNAPSHOT</artifactVersion>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<useTags>true</useTags>
								<dateLibrary>java8-localdatetime</dateLibrary>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>io.swagger</groupId>
										<artifactId>
											swagger-codegen-maven-plugin
										</artifactId>
										<versionRange>[2.4.8,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<configLocation>${project.basedir}/checkstyle/sun_checks.xml</configLocation>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			 <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.5</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <!-- Optional directory to put findbugs xdoc xml report -->
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                    <!--跳过执行的规则-->
                    <!--<omitVisitors>UnreadFields</omitVisitors>-->
                    <!--选择执行的规则-->
                    <!--<visitors>FindDeadLocalStores,UnreadFields</visitors>-->
                    <excludeFilterFile>findbugs/findbugs-exclude.xml</excludeFilterFile>
                    <effort>Min</effort>
                    <threshold>High</threshold>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>
			 <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-pmd-plugin</artifactId>
		        <version>3.8</version>
		        <configuration>
		            <!--开启增量分析 -->
		            <!--加快PMD的执行速度，同时保持分析的质量。-->
		            <analysisCache>true</analysisCache>
		            <sourceEncoding>utf-8</sourceEncoding>
		            <minimumTokens>100</minimumTokens>
		            <!--false禁用此选项以使用0退出并只编写报告-->
		            <failOnViolation>false
		            </failOnViolation>
		            <printFailingErrors>true</printFailingErrors>
		            <rulesets>
                        <ruleset>rulesets/java/ali-comment.xml</ruleset>
                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                        <ruleset>rulesets/java/ali-constant.xml</ruleset>
                        <ruleset>rulesets/java/ali-exception.xml</ruleset>
                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                        <ruleset>rulesets/java/ali-naming.xml</ruleset>
                        <ruleset>rulesets/java/ali-oop.xml</ruleset>
                        <ruleset>rulesets/java/ali-orm.xml</ruleset>
                        <ruleset>rulesets/java/ali-other.xml</ruleset>
                        <ruleset>rulesets/java/ali-set.xml</ruleset>
                    </rulesets>
		        </configuration>
		    </plugin>
		</plugins>
	</reporting>
</project>
